{"remainingRequest":"/Users/liquanfang/projects/fileupload/fileupload-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liquanfang/projects/fileupload/fileupload-vue/src/components/globalUploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liquanfang/projects/fileupload/fileupload-vue/src/components/globalUploader.vue","mtime":1555837137430},{"path":"/Users/liquanfang/projects/fileupload/fileupload-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liquanfang/projects/fileupload/fileupload-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liquanfang/projects/fileupload/fileupload-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liquanfang/projects/fileupload/fileupload-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/**\n *   全局上传插件\n *   调用方法：Bus.$emit('openUploader', {}) 打开文件选择框，参数为需要传递的额外参数\n *   监听函数：Bus.$on('fileAdded', fn); 文件选择后的回调\n *            Bus.$on('fileSuccess', fn); 文件上传成功的回调\n */\n\n// import Bus from './js/bus';\nimport SparkMD5 from 'spark-md5';\n\nexport default {\n    data() {\n        return {\n            options: {\n                target: '/index/fileUpload',\n                chunkSize: 5 * 1024 * 102,\n                fileParameterName: 'param',\n                maxChunkRetries: 3,\n                testChunks: true,   //是否开启服务器分片校验\n                // 服务器分片校验函数，秒传及断点续传基础\n                checkChunkUploadedByResponse: function (chunk, message) {\n                    let objMessage = JSON.parse(message);\n                    if (objMessage.skipUpload) {\n                        return true;\n                    }\n                    return (objMessage.uploaded || []).indexOf(chunk.offset + 1) >= 0\n                },\n                headers: {\n                    // Authorization: Ticket.get() && \"Bearer \" + Ticket.get().access_token\n                },\n                query() {\n                }\n            },\n            attrs: {\n                // accept: ACCEPT_CONFIG.getAll()\n            },\n            panelShow: false,   //选择文件后，展示上传panel\n            collapse: false,\n        }\n    },\n    created() {\n    },\n    mounted() {\n        // Bus.$on('openUploader', query => {\n        //     this.params = query || {};\n        //     if (this.$refs.uploadBtn) {\n        //         $('#global-uploader-btn').click();\n        //     }\n        // });\n    },\n    computed: {\n        //Uploader实例\n        uploader() {\n            return this.$refs.uploader.uploader;\n        }\n    },\n    methods: {\n        onFileAdded(file) {\n            // Bus.$emit('fileAdded');\n            this.panelShow = true;\n            this.computeMD5(file);\n        },\n        onFileProgress(rootFile, file, chunk) {\n            console.log(`上传中 ${file.name}，chunk：${chunk.startByte / 1024 / 1024} ~ ${chunk.endByte / 1024 / 1024}`)\n        },\n        onFileSuccess(rootFile, file, response, chunk) {\n            let res = JSON.parse(response);\n            // 服务器自定义的错误，这种错误是Uploader无法拦截的\n            if (!res.result) {\n                this.$message({ message: res.message, type: 'error' });\n                return\n            }\n            // Bus.$emit('fileSuccess');\n            console.log('上传成功');\n        },\n        onFileError(rootFile, file, response, chunk) {\n            this.$message({\n                message: response,\n                type: 'error'\n            })\n        },\n        /**\n         * 计算md5，实现断点续传及秒传\n         * @param file\n         */\n        computeMD5(file) {\n            let fileReader = new FileReader();\n            let time = new Date().getTime();\n            let md5 = '';\n            file.pause();\n            fileReader.readAsArrayBuffer(file.file);\n            fileReader.onload = (e => {\n                if (file.size != e.target.result.byteLength) {\n                    this.error('Browser reported success but could not read the file until the end.');\n                    return\n                }\n                md5 = SparkMD5.ArrayBuffer.hash(e.target.result);\n                // 添加额外的参数\n                this.uploader.opts.query = {\n                    ...this.params\n                }\n                console.log(`MD5计算完毕：${file.id} ${file.name} MD5：${md5} 用时：${new Date().getTime() - time} ms`);\n                file.uniqueIdentifier = md5;\n                file.resume();\n            });\n            fileReader.onerror = function () {\n                this.error('FileReader onerror was triggered, maybe the browser aborted due to high memory usage.');\n            };\n        },\n        fileListShow() {\n            let $list = $('#global-uploader .file-list');\n            if ($list.is(':visible')) {\n                $list.slideUp();\n                this.collapse = true;\n            } else {\n                $list.slideDown();\n                this.collapse = false;\n            }\n        },\n        close() {\n            this.uploader.cancel();\n            this.panelShow = false;\n        },\n        error(msg) {\n            this.$notify({\n                title: this.$t('c.false'),\n                message: msg,\n                type: 'error',\n                duration: 2000\n            })\n        }\n    },\n    watch: {},\n    destroyed() {\n        // Bus.$off('openUploader');\n    },\n    components: {}\n}\n",{"version":3,"sources":["globalUploader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"globalUploader.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"global-uploader\">\n\n        <!-- 上传 -->\n        <uploader\n                ref=\"uploader\"\n                :options=\"options\"\n                :autoStart=\"false\"\n                @file-added=\"onFileAdded\"\n                @file-success=\"onFileSuccess\"\n                @file-progress=\"onFileProgress\"\n                @file-error=\"onFileError\"\n                class=\"uploader-app\">\n            <uploader-unsupport></uploader-unsupport>\n\n            <uploader-btn id=\"global-uploader-btn\" :attrs=\"attrs\" ref=\"uploadBtn\">选择文件</uploader-btn>\n\n            <uploader-list v-show=\"panelShow\">\n                <div class=\"file-panel\" slot-scope=\"props\" :class=\"{'collapse': collapse}\">\n                    <div class=\"file-title\">\n                        <h2>文件列表</h2>\n                        <div class=\"operate\">\n                            <el-button @click=\"fileListShow\" type=\"text\" :title=\"collapse ? '展开':'折叠' \">\n                                <i class=\"iconfont\" :class=\"collapse ? 'inuc-fullscreen': 'inuc-minus-round'\"></i>\n                            </el-button>\n                            <el-button @click=\"close\" type=\"text\" title=\"关闭\">\n                                <i class=\"iconfont icon-close\"></i>\n                            </el-button>\n                        </div>\n                    </div>\n\n                    <ul class=\"file-list\">\n                        <li v-for=\"file in props.fileList\" :key=\"file.id\">\n                            <uploader-file :class=\"'file_' + file.id\" ref=\"files\" :file=\"file\" :list=\"true\"></uploader-file>\n                        </li>\n                        <div class=\"no-file\" v-if=\"!props.fileList.length\"><i class=\"iconfont icon-empty-file\"></i> 暂无待上传文件</div>\n                    </ul>\n                </div>\n            </uploader-list>\n\n        </uploader>\n\n    </div>\n</template>\n\n<script>\n    /**\n     *   全局上传插件\n     *   调用方法：Bus.$emit('openUploader', {}) 打开文件选择框，参数为需要传递的额外参数\n     *   监听函数：Bus.$on('fileAdded', fn); 文件选择后的回调\n     *            Bus.$on('fileSuccess', fn); 文件上传成功的回调\n     */\n   \n    // import Bus from './js/bus';\n    import SparkMD5 from 'spark-md5';\n\n    export default {\n        data() {\n            return {\n                options: {\n                    target: '/index/fileUpload',\n                    chunkSize: 5 * 1024 * 102,\n                    fileParameterName: 'param',\n                    maxChunkRetries: 3,\n                    testChunks: true,   //是否开启服务器分片校验\n                    // 服务器分片校验函数，秒传及断点续传基础\n                    checkChunkUploadedByResponse: function (chunk, message) {\n                        let objMessage = JSON.parse(message);\n                        if (objMessage.skipUpload) {\n                            return true;\n                        }\n                        return (objMessage.uploaded || []).indexOf(chunk.offset + 1) >= 0\n                    },\n                    headers: {\n                        // Authorization: Ticket.get() && \"Bearer \" + Ticket.get().access_token\n                    },\n                    query() {\n                    }\n                },\n                attrs: {\n                    // accept: ACCEPT_CONFIG.getAll()\n                },\n                panelShow: false,   //选择文件后，展示上传panel\n                collapse: false,\n            }\n        },\n        created() {\n        },\n        mounted() {\n            // Bus.$on('openUploader', query => {\n            //     this.params = query || {};\n            //     if (this.$refs.uploadBtn) {\n            //         $('#global-uploader-btn').click();\n            //     }\n            // });\n        },\n        computed: {\n            //Uploader实例\n            uploader() {\n                return this.$refs.uploader.uploader;\n            }\n        },\n        methods: {\n            onFileAdded(file) {\n                // Bus.$emit('fileAdded');\n                this.panelShow = true;\n                this.computeMD5(file);\n            },\n            onFileProgress(rootFile, file, chunk) {\n                console.log(`上传中 ${file.name}，chunk：${chunk.startByte / 1024 / 1024} ~ ${chunk.endByte / 1024 / 1024}`)\n            },\n            onFileSuccess(rootFile, file, response, chunk) {\n                let res = JSON.parse(response);\n                // 服务器自定义的错误，这种错误是Uploader无法拦截的\n                if (!res.result) {\n                    this.$message({ message: res.message, type: 'error' });\n                    return\n                }\n                // Bus.$emit('fileSuccess');\n                console.log('上传成功');\n            },\n            onFileError(rootFile, file, response, chunk) {\n                this.$message({\n                    message: response,\n                    type: 'error'\n                })\n            },\n            /**\n             * 计算md5，实现断点续传及秒传\n             * @param file\n             */\n            computeMD5(file) {\n                let fileReader = new FileReader();\n                let time = new Date().getTime();\n                let md5 = '';\n                file.pause();\n                fileReader.readAsArrayBuffer(file.file);\n                fileReader.onload = (e => {\n                    if (file.size != e.target.result.byteLength) {\n                        this.error('Browser reported success but could not read the file until the end.');\n                        return\n                    }\n                    md5 = SparkMD5.ArrayBuffer.hash(e.target.result);\n                    // 添加额外的参数\n                    this.uploader.opts.query = {\n                        ...this.params\n                    }\n                    console.log(`MD5计算完毕：${file.id} ${file.name} MD5：${md5} 用时：${new Date().getTime() - time} ms`);\n                    file.uniqueIdentifier = md5;\n                    file.resume();\n                });\n                fileReader.onerror = function () {\n                    this.error('FileReader onerror was triggered, maybe the browser aborted due to high memory usage.');\n                };\n            },\n            fileListShow() {\n                let $list = $('#global-uploader .file-list');\n                if ($list.is(':visible')) {\n                    $list.slideUp();\n                    this.collapse = true;\n                } else {\n                    $list.slideDown();\n                    this.collapse = false;\n                }\n            },\n            close() {\n                this.uploader.cancel();\n                this.panelShow = false;\n            },\n            error(msg) {\n                this.$notify({\n                    title: this.$t('c.false'),\n                    message: msg,\n                    type: 'error',\n                    duration: 2000\n                })\n            }\n        },\n        watch: {},\n        destroyed() {\n            // Bus.$off('openUploader');\n        },\n        components: {}\n    }\n</script>\n\n<style scoped lang=\"scss\">\n    #global-uploader {\n        position: fixed;\n        z-index: 20;\n        right: 15px;\n        bottom: 15px;\n        .uploader-app {\n            width: 520px;\n        }\n        .file-panel {\n            background-color: #fff;\n            border: 1px solid #e2e2e2;\n            border-radius: 7px 7px 0 0;\n            box-shadow: 0 0 10px rgba(0, 0, 0, .2);\n            .file-title {\n                display: flex;\n                height: 40px;\n                line-height: 40px;\n                padding: 0 15px;\n                border-bottom: 1px solid #ddd;\n                .operate {\n                    flex: 1;\n                    text-align: right;\n                }\n            }\n            .file-list {\n                position: relative;\n                height: 240px;\n                overflow-x: hidden;\n                overflow-y: auto;\n                background-color: #fff;\n                > li {\n                    background-color: #fff;\n                }\n            }\n            &.collapse {\n                .file-title {\n                    background-color: #E7ECF2;\n                }\n            }\n        }\n        .no-file {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            font-size: 16px;\n        }\n        // /deep/.uploader-file-icon {\n        //     &:before {\n        //         content: '' !important;\n        //     }\n        //     &[icon=image] {\n        //         background: url(./images/image-icon.png);\n        //     }\n        //     &[icon=video] {\n        //         background: url(./images/video-icon.png);\n        //     }\n        //     &[icon=document] {\n        //         background: url(./images/text-icon.png);\n        //     }\n        // }\n        // /deep/.uploader-file-actions > span {\n        //     margin-right: 6px;\n        // }\n    }\n    /* 隐藏上传按钮 */\n    #global-uploader-btn {\n        position: absolute;\n        clip: rect(0, 0, 0, 0);\n    }\n</style>"]}]}